index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8047370208.85	156.80MB
extend_algorithm_storage.py DEBUG new best cost and size: 6818375958.79	156.80MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 32.614, initial 32.614. Current storage: 156803072.00
extend_algorithm_storage.py DEBUG new best cost and size: 4747288643.23	313.61MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 30.375, initial 53.083. Current storage: 313606144.00
extend_algorithm_storage.py DEBUG new best cost and size: 4365775297.17	352.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.036, initial 56.853. Current storage: 352821248.00
extend_algorithm_storage.py DEBUG new best cost and size: 4060954673.23	619.40MB
extend_algorithm_storage.py DEBUG new best cost and size: 3987839798.6	501.79MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.657, initial 60.588. Current storage: 501792768.00
extend_algorithm_storage.py DEBUG new best cost and size: 3957854732.72	658.60MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.752, initial 60.885. Current storage: 658595840.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_db2.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'db2advis', 'parameters': {'max_index_width': 2, 'budget_MB': 750, 'try_variations_seconds': 0, 'try_variations_max_removals': 4}, 'timeout': 300}
db2advis_algorithm.py INFO Calculating best indexes DB2Advis
candidate_generation.py DEBUG Q1
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 18
candidate_generation.py DEBUG Q2
candidate_generation.py DEBUG Indexable columns: 17
candidate_generation.py DEBUG Potential indexes: 61
candidate_generation.py DEBUG Q3
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 20
candidate_generation.py DEBUG Q4
candidate_generation.py DEBUG Indexable columns: 8
candidate_generation.py DEBUG Potential indexes: 24
candidate_generation.py DEBUG Q5
candidate_generation.py DEBUG Indexable columns: 10
candidate_generation.py DEBUG Potential indexes: 52
index_selection_evaluation.py INFO Indexes found: [I(C supplier.s_suppkey), I(C customer.c_custkey), I(C orders.o_orderkey), I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_db2.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'db2advis', 'parameters': {'max_index_width': 2, 'budget_MB': 750, 'try_variations_seconds': 0, 'try_variations_max_removals': 4}, 'timeout': 300}
db2advis_algorithm.py INFO Calculating best indexes DB2Advis
candidate_generation.py DEBUG Q1
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 18
candidate_generation.py DEBUG Q2
candidate_generation.py DEBUG Indexable columns: 17
candidate_generation.py DEBUG Potential indexes: 61
candidate_generation.py DEBUG Q3
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 20
candidate_generation.py DEBUG Q4
candidate_generation.py DEBUG Indexable columns: 8
candidate_generation.py DEBUG Potential indexes: 24
candidate_generation.py DEBUG Q5
candidate_generation.py DEBUG Indexable columns: 10
candidate_generation.py DEBUG Potential indexes: 52
index_selection_evaluation.py INFO Indexes found: [I(C supplier.s_suppkey), I(C customer.c_custkey), I(C orders.o_orderkey), I(C lineitem.l_orderkey), I(C lineitem.l_suppkey), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
benchmark.py INFO Benchmark with config: {'name': 'db2advis', 'parameters': {'max_index_width': 2, 'budget_MB': 750, 'try_variations_seconds': 0, 'try_variations_max_removals': 4}, 'timeout': 300}
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5041945998.7	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 34.136, initial 34.136. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 3078791776.1599994	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.936, initial 59.781. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 2688926383.1599994	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 12.663, initial 64.874. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 2645326318.86	619.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 2619901267.6099997	501.82MB
extend_algorithm_storage.py DEBUG new best cost and size: 2583821196.19	446.93MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.909, initial 66.247. Current storage: 446930944.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7481401371.15	156.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 33.704, initial 33.704. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4962624384.25	313.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 33.667, initial 56.024. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 4747141551.450001	352.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.342, initial 57.934. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 4472557930.85	619.45MB
extend_algorithm_storage.py DEBUG new best cost and size: 4415319211.85	501.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.990, initial 60.874. Current storage: 501841920.00
extend_algorithm_storage.py DEBUG new best cost and size: 4398381426.450001	658.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.384, initial 61.024. Current storage: 658661376.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8633908701.779999	156.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 8324652604.929999	156.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.023, initial 29.023. Current storage: 156835840.00
extend_algorithm_storage.py DEBUG new best cost and size: 5229964355.04	313.67MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 37.175, initial 55.408. Current storage: 313671680.00
extend_algorithm_storage.py DEBUG new best cost and size: 4963452125.709999	352.89MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.096, initial 57.681. Current storage: 352886784.00
extend_algorithm_storage.py DEBUG new best cost and size: 4937754697.18	373.78MB
extend_algorithm_storage.py DEBUG new best cost and size: 4562761403.09	619.50MB
extend_algorithm_storage.py DEBUG new best cost and size: 4498971973.36	501.88MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 9.358, initial 61.641. Current storage: 501882880.00
extend_algorithm_storage.py DEBUG new best cost and size: 4473274487.82	522.78MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.571, initial 61.860. Current storage: 522780672.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C partsupp.ps_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 9503486811.34	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 37.848, initial 37.848. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 6862326832.339999	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 27.791, initial 55.121. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 6573972041.389999	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.202, initial 57.007. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 6310074615.190001	619.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 6265360099.87	501.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.694, initial 59.025. Current storage: 501817344.00
extend_algorithm_storage.py DEBUG new best cost and size: 6242695625.7	658.63MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.362, initial 59.173. Current storage: 658628608.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6808929433.5199995	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.421, initial 38.421. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 4851864031.5	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.743, initial 56.120. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 4683082316.61	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.479, initial 57.647. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 4469899243.73	619.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 4435574181.05	501.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.285, initial 59.885. Current storage: 501817344.00
extend_algorithm_storage.py DEBUG new best cost and size: 4420028862.16	658.63MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.350, initial 60.026. Current storage: 658628608.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7154489610.950001	156.82MB
extend_algorithm_storage.py DEBUG new best cost and size: 6756418452.33	156.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 27.949, initial 27.949. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4533682439.15	313.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 32.898, initial 51.652. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 4230695674.37	352.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.683, initial 54.883. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 3995649234.41	619.45MB
extend_algorithm_storage.py DEBUG new best cost and size: 3938941535.75	501.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.896, initial 57.995. Current storage: 501841920.00
extend_algorithm_storage.py DEBUG new best cost and size: 3915494715.71	658.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.595, initial 58.245. Current storage: 658661376.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7663718868.96	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 47.761, initial 47.761. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 6100560868.26	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 20.397, initial 58.416. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 5732556772.110001	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.032, initial 60.924. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 5705959441.7	501.81MB
extend_algorithm_storage.py DEBUG new best cost and size: 5559973880.01	446.92MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.011, initial 62.101. Current storage: 446922752.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8910317161.0	156.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.825, initial 28.825. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 5478704792.08	313.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.513, initial 56.237. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 5060622737.53	352.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.631, initial 59.576. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 4757295676.81	619.45MB
extend_algorithm_storage.py DEBUG new best cost and size: 4669064274.81	501.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 4793507205.07	446.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.278, initial 61.710. Current storage: 446947328.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3999606103.9399996	156.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 45.678, initial 45.678. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 3114902686.33	313.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 22.120, initial 57.694. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 3040827727.18	352.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.378, initial 58.700. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 2940408408.4	619.46MB
extend_algorithm_storage.py DEBUG new best cost and size: 2915702729.88	501.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.115, initial 60.399. Current storage: 501841920.00
extend_algorithm_storage.py DEBUG new best cost and size: 2905220300.68	658.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.360, initial 60.542. Current storage: 658661376.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 11734595472.029999	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 47.371, initial 47.371. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 9486504018.460001	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 19.158, initial 57.454. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 9339579926.109999	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.549, initial 58.113. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 9046414492.24	619.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 9014105814.12	501.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.485, initial 59.572. Current storage: 501817344.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8915003847.24	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.669, initial 38.669. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 6796225537.02	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.766, initial 53.245. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 6388658148.96	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.997, initial 56.049. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 6317190722.02	619.41MB
extend_algorithm_storage.py DEBUG new best cost and size: 6287364755.2	501.81MB
extend_algorithm_storage.py DEBUG new best cost and size: 6235006234.07	446.92MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.405, initial 57.106. Current storage: 446922752.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8327732018.969999	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 40.015, initial 40.015. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 6083570439.150001	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 26.948, initial 56.180. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 5923303333.9800005	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.634, initial 57.334. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 5647028653.77	619.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 5604892354.23	501.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.376, initial 59.628. Current storage: 501817344.00
extend_algorithm_storage.py DEBUG new best cost and size: 5587255738.5	658.63MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.315, initial 59.755. Current storage: 658628608.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6125990560.01	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 46.229, initial 46.229. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 4463959279.67	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 27.131, initial 60.817. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 4152841399.3500004	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.970, initial 63.548. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 4095390219.48	619.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 4062126939.9100003	501.82MB
extend_algorithm_storage.py DEBUG new best cost and size: 4006948705.6000004	446.93MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.513, initial 64.829. Current storage: 446930944.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 10119606838.309998	156.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 49.941, initial 49.941. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 8293246437.52	313.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.048, initial 58.976. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 7851293496.790001	352.87MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.329, initial 61.162. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 7792309075.39	501.87MB
extend_algorithm_storage.py DEBUG new best cost and size: 7436699022.58	446.97MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.281, initial 63.213. Current storage: 446971904.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 10557536939.34	156.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 47.862, initial 47.862. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 7866988430.8	313.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 25.485, initial 61.149. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 7534495371.34	352.87MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.226, initial 62.791. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 7317179015.26	619.47MB
extend_algorithm_storage.py DEBUG new best cost and size: 7263982163.719999	501.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.590, initial 64.127. Current storage: 501850112.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3949811265.55	156.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 2251266656.59	156.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 49.644, initial 49.644. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 1730414803.1599996	313.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.136, initial 61.294. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 1667208519.2399998	352.87MB
extend_algorithm_storage.py DEBUG new best cost and size: 1336169653.5699997	462.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 22.783, initial 70.112. Current storage: 462635008.00
extend_algorithm_storage.py DEBUG new best cost and size: 1272963383.17	501.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.730, initial 71.526. Current storage: 501850112.00
extend_algorithm_storage.py DEBUG new best cost and size: 1252954743.09	522.75MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.572, initial 71.974. Current storage: 522747904.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey), I(C partsupp.ps_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 4991238581.1	156.81MB
extend_algorithm_storage.py DEBUG new best cost and size: 4979307800.96	156.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 21.899, initial 21.899. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 3595043139.51	313.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 27.800, initial 43.612. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 3347089572.8700004	352.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.897, initial 47.501. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 3323179777.3500004	373.74MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.714, initial 47.876. Current storage: 373735424.00
extend_algorithm_storage.py DEBUG new best cost and size: 3266440020.71	640.32MB
extend_algorithm_storage.py DEBUG new best cost and size: 3250693774.82	522.71MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.181, initial 49.013. Current storage: 522706944.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C partsupp.ps_partkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8532380141.55	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 31.372, initial 31.372. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 5007304234.38	299.09MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 41.314, initial 59.725. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 4625183234.13	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.631, initial 62.798. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 4282613914.59	590.72MB
extend_algorithm_storage.py DEBUG new best cost and size: 4222503000.2700005	478.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.706, initial 66.037. Current storage: 501800960.00
extend_algorithm_storage.py DEBUG new best cost and size: 4192471810.7700005	628.10MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.711, initial 66.279. Current storage: 658612224.00
extend_algorithm_storage.py DEBUG new best cost and size: 4013257825.7700005	717.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.275, initial 67.720. Current storage: 752697344.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 4445830004.0	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 30.819, initial 30.819. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 2539301793.6	299.09MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 42.884, initial 60.486. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 2285863687.5	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 9.981, initial 64.430. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 2136869473.4	590.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 2095676909.43	478.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.320, initial 67.389. Current storage: 501817344.00
extend_algorithm_storage.py DEBUG new best cost and size: 2075756860.97	628.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.951, initial 67.699. Current storage: 658628608.00
extend_algorithm_storage.py DEBUG new best cost and size: 1956895776.97	717.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.726, initial 69.549. Current storage: 752721920.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.0003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 13458103387.73	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 7945649031.25	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 40.992, initial 40.992. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 7938370472.690001	153.29MB
extend_algorithm_storage.py DEBUG new best cost and size: 5238277439.02	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 34.074, initial 61.098. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 5230998880.460001	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 4955412708.42	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 5235621639.860001	299.35MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.051, initial 61.118. Current storage: 313892864.00
extend_algorithm_storage.py DEBUG new best cost and size: 5228343081.299999	303.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 4952756909.26	336.75MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.403, initial 63.219. Current storage: 353107968.00
extend_algorithm_storage.py DEBUG new best cost and size: 4945478350.700001	340.48MB
extend_algorithm_storage.py DEBUG new best cost and size: 4618402907.98	478.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.751, initial 65.702. Current storage: 502087680.00
extend_algorithm_storage.py DEBUG new best cost and size: 4611124349.42	482.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.158, initial 65.756. Current storage: 506003456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4580460620.5	632.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.665, initial 65.983. Current storage: 662822912.00
extend_algorithm_storage.py DEBUG new best cost and size: 4397493288.42	721.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.995, initial 67.342. Current storage: 756916224.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C supplier.s_suppkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C customer.c_custkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7339482313.2699995	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 52.807, initial 52.807. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 6353081279.660001	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 13.440, initial 59.150. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 6266941781.840001	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.356, initial 59.704. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 6155115652.2	590.79MB
extend_algorithm_storage.py DEBUG new best cost and size: 6129875611.089999	478.61MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.187, initial 60.585. Current storage: 501858304.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 10558303328.25	149.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 44.005, initial 44.005. Current storage: 156835840.00
extend_algorithm_storage.py DEBUG new best cost and size: 8110074210.68	299.14MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.188, initial 56.989. Current storage: 313671680.00
extend_algorithm_storage.py DEBUG new best cost and size: 7720211533.36	336.54MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.807, initial 59.056. Current storage: 352886784.00
extend_algorithm_storage.py DEBUG new best cost and size: 7560038192.49	590.82MB
extend_algorithm_storage.py DEBUG new best cost and size: 7511079697.46	478.64MB
extend_algorithm_storage.py DEBUG new best cost and size: 7492773861.5199995	426.29MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.946, initial 60.263. Current storage: 446996480.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8464075854.96	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 49.456, initial 49.456. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 7386694399.799999	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 12.729, initial 55.890. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 7266051052.33	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.633, initial 56.610. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 7167351069.41	590.79MB
extend_algorithm_storage.py DEBUG new best cost and size: 7144145587.66	478.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.678, initial 57.338. Current storage: 501866496.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 10000183213.62	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 44.725, initial 44.725. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 6710319875.2699995	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 32.898, initial 62.910. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 6420994570.87	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.312, initial 64.509. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 6070885560.39	590.78MB
extend_algorithm_storage.py DEBUG new best cost and size: 5992087468.9	478.61MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.680, initial 66.879. Current storage: 501858304.00
extend_algorithm_storage.py DEBUG new best cost and size: 5964944442.7	628.17MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.453, initial 67.029. Current storage: 658685952.00
extend_algorithm_storage.py DEBUG new best cost and size: 5808963623.099999	717.91MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.615, initial 67.892. Current storage: 752779264.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7108521495.179999	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 47.543, initial 47.543. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6275608458.209999	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 11.717, initial 53.690. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 6249386981.61	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 6120626611.349999	441.19MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.470, initial 54.834. Current storage: 462618624.00
extend_algorithm_storage.py DEBUG new best cost and size: 6094405134.75	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.428, initial 55.027. Current storage: 501833728.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6716871766.420001	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 40.909, initial 40.909. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4605032961.62	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 31.441, initial 59.487. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 4368338158.1	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.140, initial 61.570. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 4178398543.1800003	590.75MB
extend_algorithm_storage.py DEBUG new best cost and size: 4139703810.5	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.234, initial 63.581. Current storage: 501833728.00
extend_algorithm_storage.py DEBUG new best cost and size: 4117378406.9	628.14MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.539, initial 63.778. Current storage: 658653184.00
extend_algorithm_storage.py DEBUG new best cost and size: 3989074218.98	717.87MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.116, initial 64.906. Current storage: 752738304.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6472339297.82	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 33.386, initial 33.386. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 4447636068.070001	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 31.282, initial 54.224. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 4212053704.41	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.297, initial 56.649. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 4028726761.23	590.78MB
extend_algorithm_storage.py DEBUG new best cost and size: 3965275397.7600007	478.61MB
extend_algorithm_storage.py DEBUG new best cost and size: 3992315510.8500004	426.26MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.217, initial 58.910. Current storage: 446963712.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 9112975007.900002	149.54MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 48.300, initial 48.300. Current storage: 156803072.00
extend_algorithm_storage.py DEBUG new best cost and size: 7058978050.370001	299.08MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 22.539, initial 59.953. Current storage: 313606144.00
extend_algorithm_storage.py DEBUG new best cost and size: 6958579585.25	336.48MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.422, initial 60.523. Current storage: 352821248.00
extend_algorithm_storage.py DEBUG new best cost and size: 6677497720.82	590.69MB
extend_algorithm_storage.py DEBUG new best cost and size: 6629012801.39	478.53MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.736, initial 62.392. Current storage: 501776384.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8468080233.49	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 51.181, initial 51.181. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 7217762396.2	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 14.765, initial 58.389. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 7167050787.349999	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 6995498219.29	441.20MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.079, initial 59.671. Current storage: 462626816.00
extend_algorithm_storage.py DEBUG new best cost and size: 6944786599.589999	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.725, initial 59.963. Current storage: 501841920.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6030004710.219999	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 43.526, initial 43.526. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 4483133339.789999	299.09MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 25.653, initial 58.013. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 4321163092.889999	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.613, initial 59.530. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 4164293572.87	590.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 4132338072.8099995	478.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.370, initial 61.299. Current storage: 501817344.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8111657928.870001	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.965, initial 28.965. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 5357600903.610001	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 33.952, initial 53.083. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 4979828907.63	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.051, initial 56.391. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 4777383076.68	590.78MB
extend_algorithm_storage.py DEBUG new best cost and size: 4718686118.22	478.61MB
extend_algorithm_storage.py DEBUG new best cost and size: 4802704851.33	426.26MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.557, initial 57.942. Current storage: 446963712.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5248338734.530001	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.466, initial 29.466. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 3082384518.73	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 41.269, initial 58.575. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 2713522959.04	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 11.967, initial 63.532. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 2606693491.64	590.79MB
extend_algorithm_storage.py DEBUG new best cost and size: 2568041750.11	478.62MB
extend_algorithm_storage.py DEBUG new best cost and size: 2576007170.58	426.27MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.068, initial 65.380. Current storage: 446971904.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8329915250.360001	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 46.469, initial 46.469. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6245632931.110001	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 25.022, initial 59.864. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 5867779324.21	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.050, initial 62.292. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 5786376498.059999	590.76MB
extend_algorithm_storage.py DEBUG new best cost and size: 5719887165.21	478.59MB
extend_algorithm_storage.py DEBUG new best cost and size: 5549592529.76	426.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.423, initial 64.337. Current storage: 446947328.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7258726311.56	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.763, initial 38.763. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 5878203537.5	299.09MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 19.019, initial 50.409. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 5560297375.18	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.408, initial 53.091. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 5509782400.860001	478.56MB
extend_algorithm_storage.py DEBUG new best cost and size: 5334367936.02	426.22MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.063, initial 54.997. Current storage: 446922752.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 10237899029.439999	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 40.526, initial 40.526. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 7239676804.14	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.286, initial 57.943. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 6949018010.82	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.015, initial 59.632. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 6650871190.18	590.76MB
extend_algorithm_storage.py DEBUG new best cost and size: 6589358903.8	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.176, initial 61.721. Current storage: 501833728.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 9548421649.61	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 41.808, initial 41.808. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 7583009107.81	299.09MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 20.584, initial 53.786. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 7393343625.530001	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.501, initial 54.942. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 7171203877.059999	590.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 7118885355.18	478.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.712, initial 56.615. Current storage: 501817344.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6938049794.35	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 49.802, initial 49.802. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 5960984192.2	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 14.083, initial 56.871. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 5732123854.599999	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.839, initial 58.527. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 5646265432.51	426.27MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.498, initial 59.148. Current storage: 446971904.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6903295951.36	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 36.374, initial 36.374. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 5270527035.139999	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.652, initial 51.423. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 4998287416.58	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.165, initial 53.932. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 4907487005.37	590.77MB
extend_algorithm_storage.py DEBUG new best cost and size: 4883268316.64	478.59MB
extend_algorithm_storage.py DEBUG new best cost and size: 4892420605.55	426.25MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.118, initial 54.908. Current storage: 446955520.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 4913840550.33	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 30.722, initial 30.722. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 3837696674.6800003	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 21.900, initial 45.894. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 3643886380.8599997	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.050, initial 48.627. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 3596784035.6000004	590.75MB
extend_algorithm_storage.py DEBUG new best cost and size: 3561856499.2	478.59MB
extend_algorithm_storage.py DEBUG new best cost and size: 3480306892.9500003	426.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.489, initial 50.933. Current storage: 446947328.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6078797038.42	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.665, initial 28.665. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4138676249.4700003	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 31.916, initial 51.432. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 3932026728.5600004	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.993, initial 53.857. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 3723123055.5000005	590.75MB
extend_algorithm_storage.py DEBUG new best cost and size: 3689411561.5400004	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.170, initial 56.705. Current storage: 501833728.00
extend_algorithm_storage.py DEBUG new best cost and size: 3673305770.1200004	628.14MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.437, initial 56.894. Current storage: 658653184.00
extend_algorithm_storage.py DEBUG new best cost and size: 3573661735.32	717.88MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.713, initial 58.063. Current storage: 752746496.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8666937001.41	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.782, initial 35.782. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6041779303.74	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 30.289, initial 55.233. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 5963245385.34	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 5602805488.559999	441.19MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.266, initial 58.486. Current storage: 462618624.00
extend_algorithm_storage.py DEBUG new best cost and size: 5524271570.16	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.402, initial 59.068. Current storage: 501833728.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8705565758.06	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.615, initial 35.615. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 6130983392.539999	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.574, initial 54.656. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 6052455908.539999	336.52MB
extend_algorithm_storage.py DEBUG new best cost and size: 5676255356.829999	441.21MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.417, initial 58.019. Current storage: 462643200.00
extend_algorithm_storage.py DEBUG new best cost and size: 5597727872.829999	478.61MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.383, initial 58.600. Current storage: 501858304.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8710070327.91	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.545, initial 35.545. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 6109321717.43	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.859, initial 54.791. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 6030787799.030001	336.52MB
extend_algorithm_storage.py DEBUG new best cost and size: 5648042996.32	441.21MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.550, initial 58.204. Current storage: 462643200.00
extend_algorithm_storage.py DEBUG new best cost and size: 5569509077.92	478.61MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.390, initial 58.785. Current storage: 501858304.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8717118891.35	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.531, initial 35.531. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6176587609.170001	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.144, initial 54.320. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 6098069297.97	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 5739353871.53	441.19MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.079, initial 57.554. Current storage: 462618624.00
extend_algorithm_storage.py DEBUG new best cost and size: 5660835560.33	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.368, initial 58.135. Current storage: 501833728.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8698179602.65	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.619, initial 35.619. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 8619652387.45	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.903, initial 36.200. Current storage: 196026368.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8679040098.33	149.54MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.766, initial 35.766. Current storage: 156803072.00
extend_algorithm_storage.py DEBUG new best cost and size: 8600512479.93	186.94MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.905, initial 36.348. Current storage: 196018176.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8696573119.18	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.629, initial 35.629. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 8618045097.58	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.903, initial 36.210. Current storage: 196034560.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8686108418.03	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.701, initial 35.701. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 8607577523.63	186.96MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.904, initial 36.282. Current storage: 196042752.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8724812605.74	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.511, initial 35.511. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6165706705.75	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.331, initial 54.427. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 6087179473.75	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 5712481120.4	441.19MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.351, initial 57.777. Current storage: 462618624.00
extend_algorithm_storage.py DEBUG new best cost and size: 5633953888.4	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.375, initial 58.357. Current storage: 501833728.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3653285324.9300003	149.56MB
extend_algorithm_storage.py DEBUG new best cost and size: 2341198797.7900004	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 43.835, initial 43.835. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 1826083609.9300003	299.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 1937243153.63	186.96MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 17.254, initial 53.526. Current storage: 196042752.00
extend_algorithm_storage.py DEBUG new best cost and size: 1417834789.6100001	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 26.812, initial 65.986. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 1299729793.3700001	373.92MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.330, initial 68.819. Current storage: 392085504.00
extend_algorithm_storage.py DEBUG new best cost and size: 1108285289.17	463.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 14.730, initial 73.412. Current storage: 486178816.00
extend_algorithm_storage.py DEBUG new best cost and size: 1104433769.8500001	463.90MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.348, initial 73.505. Current storage: 486432768.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C lineitem.l_orderkey), I(C orders.o_custkey), I(C lineitem.l_partkey,C lineitem.l_suppkey), I(C supplier.s_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3626379182.55	149.53MB
extend_algorithm_storage.py DEBUG new best cost and size: 2243763551.65	149.53MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 45.830, initial 45.830. Current storage: 156794880.00
extend_algorithm_storage.py DEBUG new best cost and size: 1728033829.87	299.06MB
extend_algorithm_storage.py DEBUG new best cost and size: 1839795894.0900002	186.93MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.004, initial 55.583. Current storage: 196009984.00
extend_algorithm_storage.py DEBUG new best cost and size: 1319767279.53	336.46MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.266, initial 68.138. Current storage: 352804864.00
extend_algorithm_storage.py DEBUG new best cost and size: 1201675484.1299999	373.86MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.948, initial 70.989. Current storage: 392019968.00
extend_algorithm_storage.py DEBUG new best cost and size: 1197812872.6299999	374.10MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.321, initial 71.082. Current storage: 392273920.00
extend_algorithm_storage.py DEBUG new best cost and size: 1045180743.5500001	463.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 12.743, initial 74.767. Current storage: 486359040.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C lineitem.l_orderkey), I(C orders.o_custkey), I(C supplier.s_suppkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8610963842.71	149.55MB
extend_algorithm_storage.py DEBUG new best cost and size: 8227189710.85	149.55MB
extend_algorithm_storage.py DEBUG new best cost and size: 8997519808.45	37.40MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.042, initial 7.042. Current storage: 39215104.00
extend_algorithm_storage.py DEBUG new best cost and size: 8219289666.25	186.95MB
extend_algorithm_storage.py DEBUG new best cost and size: 7545625624.99	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 16.137, initial 22.042. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 6767395482.79	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 6115753479.190001	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.950, initial 36.815. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 6005406634.96	426.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5973443956.660001	426.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.327, initial 38.285. Current storage: 446947328.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C lineitem.l_suppkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8611950668.210001	149.56MB
extend_algorithm_storage.py DEBUG new best cost and size: 8240082891.86	149.56MB
extend_algorithm_storage.py DEBUG new best cost and size: 8999120420.06	37.40MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.038, initial 7.038. Current storage: 39215104.00
extend_algorithm_storage.py DEBUG new best cost and size: 8220279759.559999	186.96MB
extend_algorithm_storage.py DEBUG new best cost and size: 7558777442.209999	186.96MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 16.005, initial 21.917. Current storage: 196042752.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5361291575.98	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 41.657, initial 41.657. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4941424429.37	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.831, initial 46.226. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 4616976839.15	224.35MB
extend_algorithm_storage.py DEBUG new best cost and size: 4710279890.179999	209.39MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.678, initial 48.742. Current storage: 219561984.00
extend_algorithm_storage.py DEBUG new best cost and size: 4628650452.499999	246.79MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.733, initial 49.630. Current storage: 258777088.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_custkey,C orders.o_orderkey), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5653770206.59	149.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 39.131, initial 39.131. Current storage: 156835840.00
extend_algorithm_storage.py DEBUG new best cost and size: 5247076572.83	186.97MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.193, initial 43.510. Current storage: 196050944.00
extend_algorithm_storage.py DEBUG new best cost and size: 5094882098.03	206.90MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.901, initial 45.148. Current storage: 216948736.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C partsupp.ps_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8194935685.11	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 39.509, initial 39.509. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 7579318668.03	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 7684790587.379999	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.225, initial 43.275. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 7083361130.25	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 7510884507.719999	224.35MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.263, initial 44.558. Current storage: 235249664.00
extend_algorithm_storage.py DEBUG new best cost and size: 6716979429.699999	373.91MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.570, initial 50.419. Current storage: 392069120.00
extend_algorithm_storage.py DEBUG new best cost and size: 6684691003.379999	377.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.481, initial 50.657. Current storage: 395984896.00
extend_algorithm_storage.py DEBUG new best cost and size: 6658141510.699999	467.38MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.397, initial 50.853. Current storage: 490078208.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_custkey), I(C orders.o_orderkey), I(C customer.c_custkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5776827608.9	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.052, initial 18.052. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 5758269205.299999	153.28MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.321, initial 18.315. Current storage: 160727040.00
extend_algorithm_storage.py DEBUG new best cost and size: 5704129914.379999	302.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 5699200685.940001	302.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 5604147806.66	190.68MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.677, initial 20.501. Current storage: 199942144.00
extend_algorithm_storage.py DEBUG new best cost and size: 5550008515.74	340.23MB
extend_algorithm_storage.py DEBUG new best cost and size: 5545079287.3	340.23MB
extend_algorithm_storage.py DEBUG new best cost and size: 5538832113.54	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.165, initial 21.428. Current storage: 223469568.00
extend_algorithm_storage.py DEBUG new best cost and size: 5484692822.62	362.66MB
extend_algorithm_storage.py DEBUG new best cost and size: 5479763594.18	362.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.066, initial 22.266. Current storage: 380280832.00
extend_algorithm_storage.py DEBUG new best cost and size: 5429886411.059999	452.39MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.910, initial 22.973. Current storage: 474365952.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5597657993.6	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 4348536583.76	149.55MB
extend_algorithm_storage.py DEBUG new best cost and size: 5048860554.080001	37.40MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.314, initial 10.314. Current storage: 39215104.00
extend_algorithm_storage.py DEBUG new best cost and size: 5017007185.19	41.13MB
extend_algorithm_storage.py DEBUG new best cost and size: 3767885775.3500004	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 25.372, initial 33.069. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 3736886511.95	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.823, initial 33.620. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 3723620446.95	194.42MB
extend_algorithm_storage.py DEBUG new best cost and size: 3127357670.7300005	340.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 16.311, initial 44.447. Current storage: 356769792.00
extend_algorithm_storage.py DEBUG new best cost and size: 3114091605.7300005	343.98MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.424, initial 44.683. Current storage: 360685568.00
extend_algorithm_storage.py DEBUG new best cost and size: 3036556066.4700003	381.38MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.490, initial 46.060. Current storage: 399900672.00
extend_algorithm_storage.py DEBUG new best cost and size: 3024047553.8100004	390.59MB
extend_algorithm_storage.py DEBUG new best cost and size: 2899716634.23	471.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 2988935387.2700005	403.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.568, initial 46.906. Current storage: 423428096.00
extend_algorithm_storage.py DEBUG new best cost and size: 2976426874.6099997	413.03MB
extend_algorithm_storage.py DEBUG new best cost and size: 2852095955.03	493.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.578, initial 49.337. Current storage: 517529600.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C customer.c_custkey), I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5676769055.86	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 5127822338.650001	37.40MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.173, initial 10.173. Current storage: 39215104.00
extend_algorithm_storage.py DEBUG new best cost and size: 5096038517.35	41.13MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.620, initial 10.730. Current storage: 43130880.00
extend_algorithm_storage.py DEBUG new best cost and size: 4477864396.67	190.69MB
extend_algorithm_storage.py DEBUG new best cost and size: 3908707071.01	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.299, initial 31.529. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 3895441205.75	194.42MB
extend_algorithm_storage.py DEBUG new best cost and size: 3290532950.33	340.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 15.815, initial 42.358. Current storage: 356769792.00
extend_algorithm_storage.py DEBUG new best cost and size: 3277267085.0700006	343.98MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.403, initial 42.590. Current storage: 360685568.00
extend_algorithm_storage.py DEBUG new best cost and size: 3199864239.75	381.38MB
extend_algorithm_storage.py DEBUG new best cost and size: 3065229311.49	433.71MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.470, initial 46.305. Current storage: 454778880.00
extend_algorithm_storage.py DEBUG new best cost and size: 2987826466.17	471.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.525, initial 47.661. Current storage: 493993984.00
extend_algorithm_storage.py DEBUG new best cost and size: 2975344169.0700006	480.33MB
extend_algorithm_storage.py DEBUG new best cost and size: 2940205786.9700003	493.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.594, initial 48.495. Current storage: 517521408.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C customer.c_custkey), I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C lineitem.l_partkey,C lineitem.l_suppkey), I(C orders.o_custkey,C orders.o_orderdate)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 9315207360.39	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 49.816, initial 49.816. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 8600650187.36	299.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 8270765051.149999	299.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 8820599998.89	186.96MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.310, initial 52.480. Current storage: 196042752.00
extend_algorithm_storage.py DEBUG new best cost and size: 8073339456.559999	336.52MB
extend_algorithm_storage.py DEBUG new best cost and size: 7776157751.069999	336.52MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 11.841, initial 58.107. Current storage: 352870400.00
extend_algorithm_storage.py DEBUG new best cost and size: 7028897208.739999	486.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 6954499449.47	426.26MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.566, initial 62.534. Current storage: 446963712.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7034970414.08	149.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 50.323, initial 50.323. Current storage: 156835840.00
extend_algorithm_storage.py DEBUG new best cost and size: 6581002249.759999	299.14MB
extend_algorithm_storage.py DEBUG new best cost and size: 6616600962.58	186.97MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.947, initial 53.278. Current storage: 196050944.00
extend_algorithm_storage.py DEBUG new best cost and size: 6162632798.259999	336.54MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.861, initial 56.483. Current storage: 352886784.00
extend_algorithm_storage.py DEBUG new best cost and size: 6143068847.7	340.27MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.317, initial 56.622. Current storage: 356802560.00
extend_algorithm_storage.py DEBUG new best cost and size: 6122949770.37	377.67MB
extend_algorithm_storage.py DEBUG new best cost and size: 6058582116.58	430.02MB
extend_algorithm_storage.py DEBUG new best cost and size: 6081634164.499999	362.71MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.000, initial 57.055. Current storage: 380329984.00
extend_algorithm_storage.py DEBUG new best cost and size: 6052770421.57	400.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 5997147433.38	452.45MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.389, initial 57.652. Current storage: 474431488.00
extend_algorithm_storage.py DEBUG new best cost and size: 5968283690.45	489.85MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.481, initial 57.856. Current storage: 513646592.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_shipdate), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5247111613.799999	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.739, initial 38.739. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 4876738986.7	299.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 3840878663.5999994	299.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 4876420689.9	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.065, initial 43.067. Current storage: 196026368.00
extend_algorithm_storage.py DEBUG new best cost and size: 4506048062.799999	336.49MB
extend_algorithm_storage.py DEBUG new best cost and size: 3470187739.7	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.837, initial 59.485. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 3099815112.6	486.04MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.673, initial 63.809. Current storage: 509648896.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 4684603459.13	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 41.469, initial 41.469. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 3447530740.13	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 4360300837.13	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.923, initial 45.521. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 3123228118.13	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.371, initial 60.977. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 3040369736.7700005	356.44MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.653, initial 62.013. Current storage: 373751808.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey), I(C partsupp.ps_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5413050678.46	3.73MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.702, initial 0.702. Current storage: 3915776.00
extend_algorithm_storage.py DEBUG new best cost and size: 4748168617.12	153.29MB
extend_algorithm_storage.py DEBUG new best cost and size: 5055499151.4800005	41.13MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.605, initial 7.261. Current storage: 43130880.00
extend_algorithm_storage.py DEBUG new best cost and size: 4697967402.08	190.69MB
extend_algorithm_storage.py DEBUG new best cost and size: 4669247940.660001	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.640, initial 14.347. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 4311716191.26	340.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.657, initial 20.905. Current storage: 356769792.00
extend_algorithm_storage.py DEBUG new best cost and size: 4253083176.6199994	377.64MB
extend_algorithm_storage.py DEBUG new best cost and size: 4296472923.12	349.46MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.354, initial 21.185. Current storage: 366436352.00
extend_algorithm_storage.py DEBUG new best cost and size: 4237839908.4799995	386.86MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.365, initial 22.260. Current storage: 405651456.00
extend_algorithm_storage.py DEBUG new best cost and size: 4201777507.68	409.30MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.851, initial 22.922. Current storage: 429178880.00
index_selection_evaluation.py INFO Indexes found: [I(C customer.c_custkey), I(C orders.o_orderkey), I(C lineitem.l_partkey), I(C lineitem.l_orderkey), I(C part.p_type), I(C orders.o_custkey,C orders.o_orderdate)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5753640381.06	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.633, initial 18.633. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 5735076853.660001	153.28MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.323, initial 18.896. Current storage: 160727040.00
extend_algorithm_storage.py DEBUG new best cost and size: 5694077626.820001	302.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 5681702118.14	302.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 5580531483.860001	190.68MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.695, initial 21.081. Current storage: 199942144.00
extend_algorithm_storage.py DEBUG new best cost and size: 5539532257.02	340.23MB
extend_algorithm_storage.py DEBUG new best cost and size: 5527156748.34	340.23MB
extend_algorithm_storage.py DEBUG new best cost and size: 5547775008.04	280.41MB
extend_algorithm_storage.py DEBUG new best cost and size: 5515215790.740001	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.170, initial 22.005. Current storage: 223469568.00
extend_algorithm_storage.py DEBUG new best cost and size: 5474216563.900001	362.66MB
extend_algorithm_storage.py DEBUG new best cost and size: 5461841055.220001	362.66MB
extend_algorithm_storage.py DEBUG new best cost and size: 5482459314.92	302.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.594, initial 22.468. Current storage: 317554688.00
extend_algorithm_storage.py DEBUG new best cost and size: 5396863161.64	452.39MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.561, initial 23.678. Current storage: 474365952.00
index_selection_evaluation.py INFO Indexes found: [I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_orderkey,C lineitem.l_shipdate), I(C lineitem.l_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6238212703.52	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 3549221822.46	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 43.353, initial 43.353. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 3277077826.6000004	299.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 2852790577.86	299.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 3169263430.6000004	186.96MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.705, initial 49.418. Current storage: 196042752.00
extend_algorithm_storage.py DEBUG new best cost and size: 3158743321.0	190.70MB
extend_algorithm_storage.py DEBUG new best cost and size: 2472832186.0	336.52MB
extend_algorithm_storage.py DEBUG new best cost and size: 2922150085.9	224.36MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.797, initial 53.362. Current storage: 235257856.00
extend_algorithm_storage.py DEBUG new best cost and size: 2911629976.2999997	228.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 2464874012.0	373.92MB
extend_algorithm_storage.py DEBUG new best cost and size: 2225718800.3500004	373.92MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.833, initial 64.477. Current storage: 392085504.00
extend_algorithm_storage.py DEBUG new best cost and size: 2215198690.75	377.66MB
extend_algorithm_storage.py DEBUG new best cost and size: 1967032110.16	463.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 11.623, initial 68.606. Current storage: 486187008.00
extend_algorithm_storage.py DEBUG new best cost and size: 1956512000.56	467.40MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.535, initial 68.773. Current storage: 490102784.00
extend_algorithm_storage.py DEBUG new best cost and size: 1946070163.7	476.62MB
extend_algorithm_storage.py DEBUG new best cost and size: 1922478079.8600001	489.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.740, initial 69.317. Current storage: 513630208.00
extend_algorithm_storage.py DEBUG new best cost and size: 1912036243.0	499.05MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.543, initial 69.483. Current storage: 523296768.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey,C lineitem.l_partkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C part.p_type)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5598381601.400001	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 5049696617.960001	37.40MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.312, initial 10.312. Current storage: 39215104.00
extend_algorithm_storage.py DEBUG new best cost and size: 5017781464.34	41.13MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.632, initial 10.879. Current storage: 43130880.00
extend_algorithm_storage.py DEBUG new best cost and size: 4409473188.400001	190.70MB
extend_algorithm_storage.py DEBUG new best cost and size: 3769223646.02	190.70MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 24.883, initial 33.055. Current storage: 199958528.00
extend_algorithm_storage.py DEBUG new best cost and size: 3755958579.72	194.43MB
extend_algorithm_storage.py DEBUG new best cost and size: 3160915370.08	340.26MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 16.139, initial 43.859. Current storage: 356786176.00
extend_algorithm_storage.py DEBUG new best cost and size: 3147650237.2	343.99MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.420, initial 44.094. Current storage: 360701952.00
extend_algorithm_storage.py DEBUG new best cost and size: 3070148387.4199996	381.39MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.462, initial 45.471. Current storage: 399917056.00
extend_algorithm_storage.py DEBUG new best cost and size: 3057588461.72	390.61MB
extend_algorithm_storage.py DEBUG new best cost and size: 2912697082.0999994	471.12MB
extend_algorithm_storage.py DEBUG new best cost and size: 3022527708.22	403.83MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.551, initial 46.317. Current storage: 423444480.00
extend_algorithm_storage.py DEBUG new best cost and size: 3009967782.52	413.05MB
extend_algorithm_storage.py DEBUG new best cost and size: 2865076402.8999996	493.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.209, initial 49.113. Current storage: 517537792.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C customer.c_custkey), I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7017914850.37	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 50.516, initial 50.516. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6589001914.71	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 6599510566.2699995	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.962, initial 53.467. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 6170597630.61	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.499, initial 56.491. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 6151044277.01	340.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.317, initial 56.629. Current storage: 356769792.00
extend_algorithm_storage.py DEBUG new best cost and size: 6128973030.2300005	377.64MB
extend_algorithm_storage.py DEBUG new best cost and size: 6065701127.25	429.98MB
extend_algorithm_storage.py DEBUG new best cost and size: 6089609593.81	362.68MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.999, initial 57.062. Current storage: 380297216.00
extend_algorithm_storage.py DEBUG new best cost and size: 6058793681.43	400.08MB
extend_algorithm_storage.py DEBUG new best cost and size: 6004266444.05	452.41MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.401, initial 57.664. Current storage: 474390528.00
extend_algorithm_storage.py DEBUG new best cost and size: 5973450531.67	489.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.513, initial 57.881. Current storage: 513605632.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_shipdate), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 7252902454.09	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 56.303, initial 56.303. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 6837961255.35	299.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 7133895921.79	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.641, initial 57.020. Current storage: 196026368.00
extend_algorithm_storage.py DEBUG new best cost and size: 6718954723.05	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.816, initial 59.520. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 6661083430.17	426.22MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.861, initial 59.869. Current storage: 446922752.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5245954152.719999	149.54MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 38.748, initial 38.748. Current storage: 156803072.00
extend_algorithm_storage.py DEBUG new best cost and size: 4876063269.82	299.08MB
extend_algorithm_storage.py DEBUG new best cost and size: 3839675138.62	299.08MB
extend_algorithm_storage.py DEBUG new best cost and size: 4875816409.12	186.94MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.056, initial 43.070. Current storage: 196018176.00
extend_algorithm_storage.py DEBUG new best cost and size: 4505925526.219999	336.48MB
extend_algorithm_storage.py DEBUG new best cost and size: 3469537395.02	336.48MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.842, initial 59.489. Current storage: 352821248.00
extend_algorithm_storage.py DEBUG new best cost and size: 3099646512.12	486.02MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.661, initial 63.808. Current storage: 509624320.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey), I(C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 4683202795.79	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 41.504, initial 41.504. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 3446273030.54	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 4356469814.54	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.977, initial 45.585. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 3119540049.29	336.51MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 28.393, initial 61.035. Current storage: 352854016.00
extend_algorithm_storage.py DEBUG new best cost and size: 3036685899.0099998	356.44MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.656, initial 62.070. Current storage: 373751808.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey), I(C partsupp.ps_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5439163355.13	149.57MB
extend_algorithm_storage.py DEBUG new best cost and size: 5077112679.96	19.93MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.120, initial 8.120. Current storage: 20897792.00
extend_algorithm_storage.py DEBUG new best cost and size: 4990495794.21	169.50MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.706, initial 9.687. Current storage: 177733632.00
extend_algorithm_storage.py DEBUG new best cost and size: 4975205030.01	259.24MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.306, initial 9.964. Current storage: 271835136.00
index_selection_evaluation.py INFO Indexes found: [I(C partsupp.ps_suppkey), I(C lineitem.l_orderkey,C lineitem.l_shipdate)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8182615386.91	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 39.632, initial 39.632. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 7746370803.31	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 7673071640.379999	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 6.227, initial 43.391. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 7236827056.780001	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 7529770908.82	224.35MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.868, initial 44.448. Current storage: 235249664.00
extend_algorithm_storage.py DEBUG new best cost and size: 6988505217.879999	373.91MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.188, initial 48.442. Current storage: 392069120.00
extend_algorithm_storage.py DEBUG new best cost and size: 6958478075.51	377.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.430, initial 48.663. Current storage: 395984896.00
extend_algorithm_storage.py DEBUG new best cost and size: 6864841830.030001	467.38MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.346, initial 49.354. Current storage: 490078208.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_custkey), I(C orders.o_orderkey), I(C customer.c_custkey), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 6234737065.620001	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 3540208834.87	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 43.468, initial 43.468. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 3293022442.63	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 2843847328.12	299.11MB
extend_algorithm_storage.py DEBUG new best cost and size: 3157179052.79	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.819, initial 49.584. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 3146660579.37	190.69MB
extend_algorithm_storage.py DEBUG new best cost and size: 2460817546.04	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 2908425401.96	224.35MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.879, initial 53.556. Current storage: 235249664.00
extend_algorithm_storage.py DEBUG new best cost and size: 2897906928.54	228.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 2482388912.84	373.91MB
extend_algorithm_storage.py DEBUG new best cost and size: 2212063854.26	373.91MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.943, initial 64.676. Current storage: 392069120.00
extend_algorithm_storage.py DEBUG new best cost and size: 2201545380.84	377.64MB
extend_algorithm_storage.py DEBUG new best cost and size: 1953385326.17	463.64MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 11.694, initial 68.807. Current storage: 486162432.00
extend_algorithm_storage.py DEBUG new best cost and size: 1942866852.75	467.38MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.538, initial 68.975. Current storage: 490078208.00
extend_algorithm_storage.py DEBUG new best cost and size: 1932512208.45	476.59MB
extend_algorithm_storage.py DEBUG new best cost and size: 1912401423.05	489.81MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.568, initial 69.462. Current storage: 513605632.00
extend_algorithm_storage.py DEBUG new best cost and size: 1902046778.75	499.03MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.541, initial 69.627. Current storage: 523272192.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_suppkey,C lineitem.l_partkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C part.p_type)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3653289652.3	149.55MB
extend_algorithm_storage.py DEBUG new best cost and size: 2335474812.4	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 43.969, initial 43.969. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 1820570096.6200001	299.09MB
extend_algorithm_storage.py DEBUG new best cost and size: 1931514298.5400002	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 17.297, initial 53.661. Current storage: 196026368.00
extend_algorithm_storage.py DEBUG new best cost and size: 1412318568.76	336.49MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 26.880, initial 66.117. Current storage: 352837632.00
extend_algorithm_storage.py DEBUG new best cost and size: 1294174943.08	373.89MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.365, initial 68.951. Current storage: 392052736.00
extend_algorithm_storage.py DEBUG new best cost and size: 1105883163.26	463.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 14.549, initial 73.469. Current storage: 486137856.00
extend_algorithm_storage.py DEBUG new best cost and size: 1102029897.1399999	463.86MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.348, initial 73.561. Current storage: 486391808.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_orderkey), I(C lineitem.l_orderkey), I(C orders.o_custkey), I(C lineitem.l_partkey,C lineitem.l_suppkey), I(C supplier.s_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3630295290.7899995	3.73MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.284, initial 1.284. Current storage: 3915776.00
extend_algorithm_storage.py DEBUG new best cost and size: 3268513964.2599998	153.27MB
extend_algorithm_storage.py DEBUG new best cost and size: 2845662435.25	153.27MB
extend_algorithm_storage.py DEBUG new best cost and size: 3190962157.3300004	41.13MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 12.102, initial 13.230. Current storage: 43130880.00
extend_algorithm_storage.py DEBUG new best cost and size: 2407548070.12	190.67MB
extend_algorithm_storage.py DEBUG new best cost and size: 2958330594.21	61.06MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.290, initial 19.556. Current storage: 64028672.00
extend_algorithm_storage.py DEBUG new best cost and size: 2174916506.9999995	210.60MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 26.482, initial 40.859. Current storage: 220831744.00
extend_algorithm_storage.py DEBUG new best cost and size: 2156321995.35	219.82MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.855, initial 41.365. Current storage: 230498304.00
extend_algorithm_storage.py DEBUG new best cost and size: 2101746225.9499998	474.04MB
extend_algorithm_storage.py DEBUG new best cost and size: 2093810519.01	361.88MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.899, initial 43.064. Current storage: 379461632.00
index_selection_evaluation.py INFO Indexes found: [I(C customer.c_custkey), I(C orders.o_orderkey), I(C partsupp.ps_suppkey), I(C part.p_type), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5781803605.059999	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.148, initial 18.148. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 5763236817.059999	153.30MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.321, initial 18.411. Current storage: 160743424.00
extend_algorithm_storage.py DEBUG new best cost and size: 5726553919.379999	302.86MB
extend_algorithm_storage.py DEBUG new best cost and size: 5705863651.139999	302.86MB
extend_algorithm_storage.py DEBUG new best cost and size: 5609148024.419999	190.70MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.674, initial 20.593. Current storage: 199958528.00
extend_algorithm_storage.py DEBUG new best cost and size: 5572465126.74	340.26MB
extend_algorithm_storage.py DEBUG new best cost and size: 5551774858.499999	340.26MB
extend_algorithm_storage.py DEBUG new best cost and size: 5543832331.299999	213.13MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.164, initial 21.517. Current storage: 223485952.00
extend_algorithm_storage.py DEBUG new best cost and size: 5507149433.62	362.70MB
extend_algorithm_storage.py DEBUG new best cost and size: 5486459165.379999	362.70MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.035, initial 22.330. Current storage: 380313600.00
extend_algorithm_storage.py DEBUG new best cost and size: 5442768302.24	452.44MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.796, initial 22.948. Current storage: 474415104.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5752191912.08	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.439, initial 18.439. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 5733624378.8	153.28MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.323, initial 18.702. Current storage: 160727040.00
extend_algorithm_storage.py DEBUG new best cost and size: 5681775581.8	302.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 5676308965.44	302.83MB
extend_algorithm_storage.py DEBUG new best cost and size: 5579293742.8	190.68MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.692, initial 20.890. Current storage: 199942144.00
extend_algorithm_storage.py DEBUG new best cost and size: 5527444945.8	340.23MB
extend_algorithm_storage.py DEBUG new best cost and size: 5521978329.44	340.23MB
extend_algorithm_storage.py DEBUG new best cost and size: 5513978049.679999	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.171, initial 21.816. Current storage: 223469568.00
extend_algorithm_storage.py DEBUG new best cost and size: 5462129252.679999	362.66MB
extend_algorithm_storage.py DEBUG new best cost and size: 5456662636.32	362.66MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.039, initial 22.629. Current storage: 380280832.00
extend_algorithm_storage.py DEBUG new best cost and size: 5406224371.94	452.39MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.924, initial 23.344. Current storage: 474365952.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5696663702.26	149.57MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 19.491, initial 19.491. Current storage: 156835840.00
extend_algorithm_storage.py DEBUG new best cost and size: 5678102783.34	153.30MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.326, initial 19.754. Current storage: 160751616.00
extend_algorithm_storage.py DEBUG new best cost and size: 5634054010.0	302.88MB
extend_algorithm_storage.py DEBUG new best cost and size: 5624623669.34	302.88MB
extend_algorithm_storage.py DEBUG new best cost and size: 5524076314.74	190.70MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.713, initial 21.930. Current storage: 199966720.00
extend_algorithm_storage.py DEBUG new best cost and size: 5480027541.4	340.27MB
extend_algorithm_storage.py DEBUG new best cost and size: 5470597200.74	340.27MB
extend_algorithm_storage.py DEBUG new best cost and size: 5458760621.62	213.14MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.182, initial 22.853. Current storage: 223494144.00
extend_algorithm_storage.py DEBUG new best cost and size: 5414711848.28	362.71MB
extend_algorithm_storage.py DEBUG new best cost and size: 5405281507.62	362.71MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.980, initial 23.609. Current storage: 380329984.00
extend_algorithm_storage.py DEBUG new best cost and size: 5359055806.6	452.45MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.855, initial 24.263. Current storage: 474431488.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5725726196.32	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.850, initial 18.850. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 5707158756.2	153.29MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.324, initial 19.114. Current storage: 160735232.00
extend_algorithm_storage.py DEBUG new best cost and size: 5663289390.66	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5653606366.759999	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5552861564.639999	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.704, initial 21.300. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 5508992199.099999	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5499309175.2	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5487545871.5199995	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.176, initial 22.226. Current storage: 223477760.00
extend_algorithm_storage.py DEBUG new best cost and size: 5443676505.98	362.68MB
extend_algorithm_storage.py DEBUG new best cost and size: 5433993482.08	362.68MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.976, initial 22.985. Current storage: 380297216.00
extend_algorithm_storage.py DEBUG new best cost and size: 5387549113.28	452.41MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.855, initial 23.643. Current storage: 474390528.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5756065076.22	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.563, initial 18.563. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 5737505368.38	153.29MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.322, initial 18.826. Current storage: 160735232.00
extend_algorithm_storage.py DEBUG new best cost and size: 5690891812.82	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5683977666.62	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5583053065.42	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.692, initial 21.011. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 5536439509.86	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5529525363.66	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5550417163.42	280.42MB
extend_algorithm_storage.py DEBUG new best cost and size: 5517737372.3	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.170, initial 21.935. Current storage: 223477760.00
extend_algorithm_storage.py DEBUG new best cost and size: 5471123816.740001	362.68MB
extend_algorithm_storage.py DEBUG new best cost and size: 5464209670.54	362.68MB
extend_algorithm_storage.py DEBUG new best cost and size: 5485101470.3	302.86MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.591, initial 22.397. Current storage: 317571072.00
extend_algorithm_storage.py DEBUG new best cost and size: 5399498982.14	452.41MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.561, initial 23.608. Current storage: 474390528.00
index_selection_evaluation.py INFO Indexes found: [I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_orderkey,C lineitem.l_shipdate), I(C lineitem.l_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5824831504.280001	149.54MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 17.982, initial 17.982. Current storage: 156803072.00
extend_algorithm_storage.py DEBUG new best cost and size: 5806267231.6	153.27MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.319, initial 18.244. Current storage: 160718848.00
extend_algorithm_storage.py DEBUG new best cost and size: 5767046123.960001	302.81MB
extend_algorithm_storage.py DEBUG new best cost and size: 5749006391.76	302.81MB
extend_algorithm_storage.py DEBUG new best cost and size: 5652265170.92	190.67MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.652, initial 20.412. Current storage: 199933952.00
extend_algorithm_storage.py DEBUG new best cost and size: 5613044063.280001	340.21MB
extend_algorithm_storage.py DEBUG new best cost and size: 5595004331.080001	340.21MB
extend_algorithm_storage.py DEBUG new best cost and size: 5586949477.8	213.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.156, initial 21.332. Current storage: 223461376.00
extend_algorithm_storage.py DEBUG new best cost and size: 5547728370.16	362.65MB
extend_algorithm_storage.py DEBUG new best cost and size: 5529688637.96	362.65MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.025, initial 22.138. Current storage: 380264448.00
extend_algorithm_storage.py DEBUG new best cost and size: 5484447154.280001	452.38MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.818, initial 22.775. Current storage: 474357760.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5734914271.92	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.818, initial 18.818. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 5716349719.76	153.29MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.324, initial 19.081. Current storage: 160735232.00
extend_algorithm_storage.py DEBUG new best cost and size: 5664535932.02	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5568623993.92	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.584, initial 21.172. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 5516810206.18	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5534050777.12	280.42MB
extend_algorithm_storage.py DEBUG new best cost and size: 5497020000.8	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.286, initial 22.185. Current storage: 223477760.00
extend_algorithm_storage.py DEBUG new best cost and size: 5445206213.06	362.68MB
extend_algorithm_storage.py DEBUG new best cost and size: 5462446784.0	302.86MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.629, initial 22.675. Current storage: 317571072.00
extend_algorithm_storage.py DEBUG new best cost and size: 5376844295.84	452.41MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.567, initial 23.887. Current storage: 474390528.00
index_selection_evaluation.py INFO Indexes found: [I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_orderkey,C lineitem.l_shipdate), I(C lineitem.l_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5758414830.42	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 18.817, initial 18.817. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 5739846645.02	153.29MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.322, initial 19.079. Current storage: 160735232.00
extend_algorithm_storage.py DEBUG new best cost and size: 5695799656.32	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5686457245.82	302.84MB
extend_algorithm_storage.py DEBUG new best cost and size: 5585302858.940001	190.69MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.692, initial 21.258. Current storage: 199950336.00
extend_algorithm_storage.py DEBUG new best cost and size: 5541255870.24	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5531913459.74	340.24MB
extend_algorithm_storage.py DEBUG new best cost and size: 5519987165.82	213.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.169, initial 22.179. Current storage: 223477760.00
extend_algorithm_storage.py DEBUG new best cost and size: 5475940177.119999	362.68MB
extend_algorithm_storage.py DEBUG new best cost and size: 5466597766.62	362.68MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.967, initial 22.931. Current storage: 380297216.00
extend_algorithm_storage.py DEBUG new best cost and size: 5420373721.36	452.42MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.846, initial 23.583. Current storage: 474398720.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C customer.c_nationkey), I(C orders.o_custkey,C orders.o_orderdate), I(C lineitem.l_suppkey,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 5841233185.03	3.73MB
extend_algorithm_storage.py DEBUG new best cost and size: 5295784853.58	37.40MB
extend_algorithm_storage.py DEBUG new best cost and size: 5409820518.23	19.93MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 8.037, initial 8.037. Current storage: 20897792.00
extend_algorithm_storage.py DEBUG new best cost and size: 5368433829.429999	23.66MB
extend_algorithm_storage.py DEBUG new best cost and size: 4822985497.98	57.33MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 10.848, initial 18.013. Current storage: 60112896.00
extend_algorithm_storage.py DEBUG new best cost and size: 4781598809.179999	61.06MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.858, initial 18.717. Current storage: 64028672.00
extend_algorithm_storage.py DEBUG new best cost and size: 4025998767.6800003	210.62MB
extend_algorithm_storage.py DEBUG new best cost and size: 3797879946.55	210.62MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 20.573, initial 35.439. Current storage: 220856320.00
extend_algorithm_storage.py DEBUG new best cost and size: 3781538098.4100003	219.84MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.430, initial 35.717. Current storage: 230522880.00
index_selection_evaluation.py INFO Indexes found: [I(C partsupp.ps_suppkey), I(C orders.o_orderkey), I(C customer.c_custkey), I(C lineitem.l_suppkey), I(C part.p_type)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3511769575.8299994	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 22.888, initial 22.888. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 3370579836.93	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.020, initial 25.988. Current storage: 196026368.00
extend_algorithm_storage.py DEBUG new best cost and size: 3301132013.2899995	224.34MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.060, initial 27.513. Current storage: 235241472.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_partkey), I(C orders.o_custkey), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3563139739.67	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 21.915, initial 21.915. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 3421795283.55	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 3.967, initial 25.012. Current storage: 196026368.00
extend_algorithm_storage.py DEBUG new best cost and size: 3352353270.1700006	224.34MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.029, initial 26.534. Current storage: 235241472.00
extend_algorithm_storage.py DEBUG new best cost and size: 3216987946.72	478.58MB
extend_algorithm_storage.py DEBUG new best cost and size: 3193675469.13	366.42MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.733, initial 30.012. Current storage: 384221184.00
extend_algorithm_storage.py DEBUG new best cost and size: 3181664755.2500005	515.97MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 0.376, initial 30.275. Current storage: 541032448.00
extend_algorithm_storage.py DEBUG new best cost and size: 3107356240.4700003	605.70MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.336, initial 31.903. Current storage: 635125760.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_custkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C lineitem.l_partkey,C lineitem.l_suppkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3471326366.81	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.371, initial 23.371. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 3330062533.33	186.96MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.069, initial 26.489. Current storage: 196042752.00
extend_algorithm_storage.py DEBUG new best cost and size: 3260606001.73	224.36MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.086, initial 28.022. Current storage: 235257856.00
extend_algorithm_storage.py DEBUG new best cost and size: 3120563958.6699996	478.62MB
extend_algorithm_storage.py DEBUG new best cost and size: 3094459230.96	366.45MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.096, initial 31.690. Current storage: 384253952.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_custkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 3483549229.58	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 23.189, initial 23.189. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 3342194069.2	186.95MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 4.058, initial 26.306. Current storage: 196034560.00
extend_algorithm_storage.py DEBUG new best cost and size: 3272737537.6	224.35MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 2.078, initial 27.837. Current storage: 235249664.00
extend_algorithm_storage.py DEBUG new best cost and size: 3127855004.5	478.61MB
extend_algorithm_storage.py DEBUG new best cost and size: 3101034091.89	366.44MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 5.246, initial 31.623. Current storage: 384237568.00
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_custkey), I(C orders.o_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8706994012.39	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.586, initial 35.586. Current storage: 156819456.00
extend_algorithm_storage.py DEBUG new best cost and size: 6107766073.02	299.11MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.852, initial 54.815. Current storage: 313638912.00
extend_algorithm_storage.py DEBUG new best cost and size: 6029232020.22	336.51MB
extend_algorithm_storage.py DEBUG new best cost and size: 5644670449.8	441.20MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.582, initial 58.241. Current storage: 462626816.00
extend_algorithm_storage.py DEBUG new best cost and size: 5566136397.0	478.59MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.391, initial 58.822. Current storage: 501841920.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 750, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8669177551.24	149.55MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.811, initial 35.811. Current storage: 156811264.00
extend_algorithm_storage.py DEBUG new best cost and size: 6103433061.559999	299.09MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.596, initial 54.809. Current storage: 313622528.00
extend_algorithm_storage.py DEBUG new best cost and size: 6024908198.360001	336.49MB
extend_algorithm_storage.py DEBUG new best cost and size: 5654977790.02	441.16MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.348, initial 58.129. Current storage: 462594048.00
extend_algorithm_storage.py DEBUG new best cost and size: 5576452926.820001	478.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.389, initial 58.710. Current storage: 501809152.00
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_extend.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'extend_storage', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'min_cost_improvement': 1.003}, 'timeout': 300000000}
extend_algorithm_storage.py INFO Calculating best indexes Extend
extend_algorithm_storage.py DEBUG new best cost and size: 8697009757.09	149.56MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 35.644, initial 35.644. Current storage: 156827648.00
extend_algorithm_storage.py DEBUG new best cost and size: 6133208687.45	299.12MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 29.479, initial 54.615. Current storage: 313655296.00
extend_algorithm_storage.py DEBUG new best cost and size: 6054681203.45	336.52MB
extend_algorithm_storage.py DEBUG new best cost and size: 5667275429.7699995	441.21MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 7.597, initial 58.063. Current storage: 462643200.00
extend_algorithm_storage.py DEBUG new best cost and size: 5588747945.7699995	478.61MB
extend_algorithm_storage.py DEBUG Add index. Current cost savings: 1.386, initial 58.644. Current storage: 501858304.00
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_orderkey), I(C lineitem.l_partkey,C lineitem.l_shipmode), I(C orders.o_orderkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_relaxation.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'relaxation', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'allowed_transformations': ['splitting', 'merging', 'prefixing', 'removal']}, 'timeout': 300}
relaxation_algorithm.py INFO Calculating best indexes Relaxation
candidate_generation.py DEBUG Q1
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 18
candidate_generation.py DEBUG Q2
candidate_generation.py DEBUG Indexable columns: 17
candidate_generation.py DEBUG Potential indexes: 61
candidate_generation.py DEBUG Q3
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 20
candidate_generation.py DEBUG Q4
candidate_generation.py DEBUG Indexable columns: 8
candidate_generation.py DEBUG Potential indexes: 24
candidate_generation.py DEBUG Q5
candidate_generation.py DEBUG Indexable columns: 10
candidate_generation.py DEBUG Potential indexes: 52
relaxation_algorithm.py DEBUG Size of current configuration: 913686528. Budget: 524288000.
relaxation_algorithm.py DEBUG Size of current configuration: 756875264. Budget: 524288000.
index_selection_evaluation.py INFO Indexes found: [I(C supplier.s_suppkey), I(C customer.c_custkey), I(C lineitem.l_orderkey), I(C orders.o_orderkey), I(C lineitem.l_shipmode,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_relaxation.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'relaxation', 'parameters': {'budget_MB': 500, 'max_index_width': 2, 'allowed_transformations': ['splitting', 'merging', 'prefixing', 'removal']}, 'timeout': 300}
relaxation_algorithm.py INFO Calculating best indexes Relaxation
candidate_generation.py DEBUG Q1
candidate_generation.py DEBUG Indexable columns: 17
candidate_generation.py DEBUG Potential indexes: 61
candidate_generation.py DEBUG Q2
candidate_generation.py DEBUG Indexable columns: 16
candidate_generation.py DEBUG Potential indexes: 78
candidate_generation.py DEBUG Q3
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 20
candidate_generation.py DEBUG Q4
candidate_generation.py DEBUG Indexable columns: 10
candidate_generation.py DEBUG Potential indexes: 52
candidate_generation.py DEBUG Q5
candidate_generation.py DEBUG Indexable columns: 4
candidate_generation.py DEBUG Potential indexes: 10
relaxation_algorithm.py DEBUG Size of current configuration: 1003995136. Budget: 524288000.
relaxation_algorithm.py DEBUG Size of current configuration: 1003986944. Budget: 524288000.
relaxation_algorithm.py DEBUG Size of current configuration: 792264704. Budget: 524288000.
relaxation_algorithm.py DEBUG Size of current configuration: 635437056. Budget: 524288000.
relaxation_algorithm.py DEBUG Size of current configuration: 635183104. Budget: 524288000.
relaxation_algorithm.py DEBUG Size of current configuration: 595968000. Budget: 524288000.
index_selection_evaluation.py INFO Indexes found: [I(C orders.o_custkey), I(C lineitem.l_shipmode,C lineitem.l_partkey)]
index_selection_evaluation.py DEBUG Init IndexSelection
index_selection_evaluation.py INFO Starting Index Selection Evaluation
index_selection_evaluation.py INFO Using config file: config_relaxation.json
database_connector.py DEBUG Database connector created: None
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: None
table_generator.py DEBUG Database with given scale factor already existing
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Run `analyze`
index_selection_evaluation.py INFO Create new database connector (closing old)
database_connector.py DEBUG Database connector closed: tpch1gb_xl_v4
database_connector.py DEBUG Database connector created: tpch1gb_xl_v4
postgres_dbms.py INFO Postgres: Set random seed `SELECT setseed(0.17)`
postgres_dbms.py DEBUG Postgres connector created: tpch1gb_xl_v4
selection_algorithm.py DEBUG Init selection algorithm
cost_evaluation.py DEBUG Init cost evaluation
cost_evaluation.py INFO Cost estimation with whatif
what_if_index_creation.py DEBUG Init WhatIfIndexCreation
index_selection_evaluation.py INFO Running algorithm {'name': 'relaxation', 'parameters': {'budget_MB': 250, 'max_index_width': 2, 'allowed_transformations': ['splitting', 'merging', 'prefixing', 'removal']}, 'timeout': 300}
relaxation_algorithm.py INFO Calculating best indexes Relaxation
candidate_generation.py DEBUG Q1
candidate_generation.py DEBUG Indexable columns: 17
candidate_generation.py DEBUG Potential indexes: 61
candidate_generation.py DEBUG Q2
candidate_generation.py DEBUG Indexable columns: 16
candidate_generation.py DEBUG Potential indexes: 78
candidate_generation.py DEBUG Q3
candidate_generation.py DEBUG Indexable columns: 6
candidate_generation.py DEBUG Potential indexes: 20
candidate_generation.py DEBUG Q4
candidate_generation.py DEBUG Indexable columns: 10
candidate_generation.py DEBUG Potential indexes: 52
candidate_generation.py DEBUG Q5
candidate_generation.py DEBUG Indexable columns: 4
candidate_generation.py DEBUG Potential indexes: 10
relaxation_algorithm.py DEBUG Size of current configuration: 635445248. Budget: 262144000.
relaxation_algorithm.py DEBUG Size of current configuration: 635437056. Budget: 262144000.
relaxation_algorithm.py DEBUG Size of current configuration: 635183104. Budget: 262144000.
relaxation_algorithm.py DEBUG Size of current configuration: 384253952. Budget: 262144000.
relaxation_algorithm.py DEBUG Size of current configuration: 345038848. Budget: 262144000.
relaxation_algorithm.py DEBUG Size of current configuration: 305823744. Budget: 262144000.
index_selection_evaluation.py INFO Indexes found: [I(C lineitem.l_shipmode)]
